/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutStreamImport } from './routes/_layout.stream'
import { Route as LayoutFlaggedImport } from './routes/_layout.flagged'
import { Route as authenticationSignupIndexImport } from './routes/(authentication)/signup/index'
import { Route as authenticationLoginIndexImport } from './routes/(authentication)/login/index'
import { Route as LayoutJournalsJournalIdImport } from './routes/_layout.journals.$journalId'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutStreamRoute = LayoutStreamImport.update({
  id: '/stream',
  path: '/stream',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFlaggedRoute = LayoutFlaggedImport.update({
  id: '/flagged',
  path: '/flagged',
  getParentRoute: () => LayoutRoute,
} as any)

const authenticationSignupIndexRoute = authenticationSignupIndexImport.update({
  id: '/(authentication)/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any)

const authenticationLoginIndexRoute = authenticationLoginIndexImport.update({
  id: '/(authentication)/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutJournalsJournalIdRoute = LayoutJournalsJournalIdImport.update({
  id: '/journals/$journalId',
  path: '/journals/$journalId',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/flagged': {
      id: '/_layout/flagged'
      path: '/flagged'
      fullPath: '/flagged'
      preLoaderRoute: typeof LayoutFlaggedImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/stream': {
      id: '/_layout/stream'
      path: '/stream'
      fullPath: '/stream'
      preLoaderRoute: typeof LayoutStreamImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/journals/$journalId': {
      id: '/_layout/journals/$journalId'
      path: '/journals/$journalId'
      fullPath: '/journals/$journalId'
      preLoaderRoute: typeof LayoutJournalsJournalIdImport
      parentRoute: typeof LayoutImport
    }
    '/(authentication)/login/': {
      id: '/(authentication)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authenticationLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(authentication)/signup/': {
      id: '/(authentication)/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authenticationSignupIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutFlaggedRoute: typeof LayoutFlaggedRoute
  LayoutStreamRoute: typeof LayoutStreamRoute
  LayoutJournalsJournalIdRoute: typeof LayoutJournalsJournalIdRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutFlaggedRoute: LayoutFlaggedRoute,
  LayoutStreamRoute: LayoutStreamRoute,
  LayoutJournalsJournalIdRoute: LayoutJournalsJournalIdRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/flagged': typeof LayoutFlaggedRoute
  '/stream': typeof LayoutStreamRoute
  '/journals/$journalId': typeof LayoutJournalsJournalIdRoute
  '/login': typeof authenticationLoginIndexRoute
  '/signup': typeof authenticationSignupIndexRoute
}

export interface FileRoutesByTo {
  '': typeof LayoutRouteWithChildren
  '/flagged': typeof LayoutFlaggedRoute
  '/stream': typeof LayoutStreamRoute
  '/journals/$journalId': typeof LayoutJournalsJournalIdRoute
  '/login': typeof authenticationLoginIndexRoute
  '/signup': typeof authenticationSignupIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/flagged': typeof LayoutFlaggedRoute
  '/_layout/stream': typeof LayoutStreamRoute
  '/_layout/journals/$journalId': typeof LayoutJournalsJournalIdRoute
  '/(authentication)/login/': typeof authenticationLoginIndexRoute
  '/(authentication)/signup/': typeof authenticationSignupIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/flagged'
    | '/stream'
    | '/journals/$journalId'
    | '/login'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/flagged'
    | '/stream'
    | '/journals/$journalId'
    | '/login'
    | '/signup'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/flagged'
    | '/_layout/stream'
    | '/_layout/journals/$journalId'
    | '/(authentication)/login/'
    | '/(authentication)/signup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  authenticationLoginIndexRoute: typeof authenticationLoginIndexRoute
  authenticationSignupIndexRoute: typeof authenticationSignupIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  authenticationLoginIndexRoute: authenticationLoginIndexRoute,
  authenticationSignupIndexRoute: authenticationSignupIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/(authentication)/login/",
        "/(authentication)/signup/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/flagged",
        "/_layout/stream",
        "/_layout/journals/$journalId"
      ]
    },
    "/_layout/flagged": {
      "filePath": "_layout.flagged.tsx",
      "parent": "/_layout"
    },
    "/_layout/stream": {
      "filePath": "_layout.stream.tsx",
      "parent": "/_layout"
    },
    "/_layout/journals/$journalId": {
      "filePath": "_layout.journals.$journalId.tsx",
      "parent": "/_layout"
    },
    "/(authentication)/login/": {
      "filePath": "(authentication)/login/index.tsx"
    },
    "/(authentication)/signup/": {
      "filePath": "(authentication)/signup/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
