/// <reference path="../pb_data/types.d.ts" />
migrate(
  (db) => {
    const snapshot = [
      {
        id: "75h1r0vz3gvycqp",
        created: "2023-11-03 09:25:46.687Z",
        updated: "2023-12-28 22:03:28.146Z",
        name: "slips",
        type: "base",
        system: false,
        schema: [
          {
            system: false,
            id: "hdbtj9oz",
            name: "user",
            type: "relation",
            required: false,
            presentable: false,
            unique: false,
            options: {
              collectionId: "_pb_users_auth_",
              cascadeDelete: false,
              minSelect: null,
              maxSelect: 1,
              displayFields: null,
            },
          },
          {
            system: false,
            id: "wjn2pilp",
            name: "title",
            type: "text",
            required: false,
            presentable: false,
            unique: false,
            options: {
              min: null,
              max: null,
              pattern: "",
            },
          },
          {
            system: false,
            id: "vwnpx6l0",
            name: "content",
            type: "json",
            required: false,
            presentable: false,
            unique: false,
            options: {
              maxSize: 2000000,
            },
          },
          {
            system: false,
            id: "pfftyfhl",
            name: "isPinned",
            type: "bool",
            required: false,
            presentable: false,
            unique: false,
            options: {},
          },
          {
            system: false,
            id: "zyykuufo",
            name: "isFlagged",
            type: "bool",
            required: false,
            presentable: false,
            unique: false,
            options: {},
          },
          {
            system: false,
            id: "phorn9bk",
            name: "journals",
            type: "relation",
            required: false,
            presentable: false,
            unique: false,
            options: {
              collectionId: "35y5ayizwh2c9fk",
              cascadeDelete: false,
              minSelect: null,
              maxSelect: null,
              displayFields: null,
            },
          },
          {
            system: false,
            id: "tdg6yhsm",
            name: "deleted",
            type: "date",
            required: false,
            presentable: false,
            unique: false,
            options: {
              min: "",
              max: "",
            },
          },
        ],
        indexes: [],
        listRule: "user = @request.auth.id",
        viewRule: null,
        createRule: "user = @request.auth.id",
        updateRule: "user = @request.auth.id",
        deleteRule: null,
        options: {},
      },
      {
        id: "_pb_users_auth_",
        created: "2023-11-04 03:48:06.082Z",
        updated: "2023-12-28 06:12:52.886Z",
        name: "users",
        type: "auth",
        system: false,
        schema: [
          {
            system: false,
            id: "users_name",
            name: "name",
            type: "text",
            required: false,
            presentable: false,
            unique: false,
            options: {
              min: null,
              max: null,
              pattern: "",
            },
          },
        ],
        indexes: [],
        listRule: "id = @request.auth.id",
        viewRule: "id = @request.auth.id",
        createRule: "",
        updateRule: "id = @request.auth.id",
        deleteRule: "id = @request.auth.id",
        options: {
          allowEmailAuth: true,
          allowOAuth2Auth: true,
          allowUsernameAuth: true,
          exceptEmailDomains: null,
          manageRule: null,
          minPasswordLength: 8,
          onlyEmailDomains: null,
          onlyVerified: false,
          requireEmail: false,
        },
      },
      {
        id: "35y5ayizwh2c9fk",
        created: "2023-12-28 06:15:30.844Z",
        updated: "2023-12-28 07:03:22.303Z",
        name: "journals",
        type: "base",
        system: false,
        schema: [
          {
            system: false,
            id: "ovv4ho1m",
            name: "user",
            type: "relation",
            required: false,
            presentable: false,
            unique: false,
            options: {
              collectionId: "_pb_users_auth_",
              cascadeDelete: false,
              minSelect: null,
              maxSelect: 1,
              displayFields: null,
            },
          },
          {
            system: false,
            id: "gailjr3l",
            name: "name",
            type: "text",
            required: false,
            presentable: false,
            unique: false,
            options: {
              min: null,
              max: null,
              pattern: "",
            },
          },
        ],
        indexes: [],
        listRule: "user = @request.auth.id",
        viewRule: "user = @request.auth.id",
        createRule: null,
        updateRule: null,
        deleteRule: null,
        options: {},
      },
      {
        id: "87s8cpf3uhw1w9k",
        created: "2023-12-28 21:44:38.875Z",
        updated: "2023-12-28 22:04:37.142Z",
        name: "journalsWithSlipCounts",
        type: "view",
        system: false,
        schema: [
          {
            system: false,
            id: "ggd3vxu4",
            name: "user",
            type: "relation",
            required: false,
            presentable: false,
            unique: false,
            options: {
              collectionId: "_pb_users_auth_",
              cascadeDelete: false,
              minSelect: null,
              maxSelect: 1,
              displayFields: null,
            },
          },
          {
            system: false,
            id: "pxr8pdl1",
            name: "name",
            type: "text",
            required: false,
            presentable: false,
            unique: false,
            options: {
              min: null,
              max: null,
              pattern: "",
            },
          },
          {
            system: false,
            id: "mrjqdqin",
            name: "totalSlips",
            type: "number",
            required: false,
            presentable: false,
            unique: false,
            options: {
              min: null,
              max: null,
              noDecimal: false,
            },
          },
        ],
        indexes: [],
        listRule: "user = @request.auth.id",
        viewRule: "user = @request.auth.id",
        createRule: null,
        updateRule: null,
        deleteRule: null,
        options: {
          query:
            "SELECT \n  t.id, \n  t.user,\n  t.name, \n  COUNT(t.id) as totalSlips\nFROM \n  slips as s, \n  JSON_EACH(s.journals) as st\nJOIN journals as t on t.id = st.value\nGROUP BY t.name",
        },
      },
    ];

    const collections = snapshot.map((item) => new Collection(item));

    return Dao(db).importCollections(collections, true, null);
  },
  (db) => {
    return null;
  }
);
